AWSTemplateFormatVersion: 2010-09-09
Resources:

#### Eks NODE GROUP######
  
  nodegroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName: ControlPlane-iHKfQsQHX42X
      NodeRole: !GetAtt EKSNodeRole.Arn
      NodegroupName: slave-node
      Subnets: 
        - !ImportValue 'AWS::eks-cluster11::SubnetPublic1'
        - !ImportValue 'AWS::eks-cluster11::SubnetPublic1'

  EKSNodeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
    
      
  SG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: >-
        Communication between the control plane and worker nodes
      SecurityGroupIngress:
        - Description: >-
            [IngressInterCluster] Allow worker nodes
            communicate with control plane (kubelet and workload TCP ports)
          FromPort: 1025
          IpProtocol: tcp
          SourceSecurityGroupId: !ImportValue 'AWS::eks-cluster11::ControlPlaneSecurityGroup'
          ToPort: 65535
        - Description: >-
            [IngressInterClusterAPI] Allow worker nodes  to
            communicate with control plane (workloads using HTTPS port, commonly
            used with extension API servers)
          FromPort: 443
          IpProtocol: tcp
          SourceSecurityGroupId: !ImportValue 'AWS::eks-cluster11::ControlPlaneSecurityGroup'
          ToPort: 443
      VpcId: !ImportValue 'AWS::eks-cluster11::VPC'
