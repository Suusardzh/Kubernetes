AWSTemplateFormatVersion: 2010-09-09
Description: >-
  EKS nodes (AMI family: AmazonLinux2, SSH access: false, private networking:
  false) [created and managed by eksctl]
Mappings:
  ServicePrincipalPartitionMap:
    aws:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-cn:
      EC2: ec2.amazonaws.com.cn
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-us-gov:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
Resources:
  EgressInterCluster:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      Description: >-
        Allow control plane to communicate with worker nodes in group
        ng-d67b9dea (kubelet and workload TCP ports)
      DestinationSecurityGroupId: !Ref SG
      FromPort: 1025
      GroupId: !ImportValue 'eks-test-cluster::SecurityGroup'
      IpProtocol: tcp
      ToPort: 65535
  EgressInterClusterAPI:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      Description: >-
        Allow control plane to communicate with worker nodes in group
        ng-d67b9dea (workloads using HTTPS port, commonly used with extension
        API servers)
      DestinationSecurityGroupId: !Ref SG
      FromPort: 443
      GroupId: !ImportValue 'eks-test::SecurityGroup'
      IpProtocol: tcp
      ToPort: 443
  IngressInterClusterCP:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      Description: >-
        Allow control plane to receive API requests from worker nodes in group
        ng-d67b9dea
      FromPort: 443
      GroupId: !ImportValue 'eks-test-1::SecurityGroup'
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref SG
      ToPort: 443
  NodeGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchTemplate:
        LaunchTemplateName: !Sub '${AWS::StackName}'
        Version: !GetAtt 
          - NodeGroupLaunchTemplate
          - LatestVersionNumber
      MaxSize: '1'
      MinSize: '1'
      Tags:
        - Key: Name
          PropagateAtLaunch: 'true'
          Value: exciting-rainbow-1614466223-ng-d67b9dea-Node
        - Key: kubernetes.io/cluster/exciting-rainbow-1614466223
          PropagateAtLaunch: 'true'
          Value: owned
      VPCZoneIdentifier: !Split 
        - ','
        - !ImportValue 'eks-test::SubnetsPublic'
    UpdatePolicy:
      AutoScalingRollingUpdate: {}
  NodeGroupLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              Encrypted: false
              Iops: 3000
              Throughput: 125
              VolumeSize: 80
              VolumeType: gp3
        IamInstanceProfile:
          Arn: !GetAtt 
            - NodeInstanceProfile
            - Arn
        ImageId: ami-091f6e311130bd848
        InstanceType: t2.micro
        MetadataOptions:
          HttpPutResponseHopLimit: 2
          HttpTokens: optional
        NetworkInterfaces:
          - DeviceIndex: 0
            Groups:
              - !ImportValue >-
                eks-test-1614466223-cluster::SharedNodeSecurityGroup
              - !Ref SG
        UserData: >-
          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
      LaunchTemplateName: !Sub '${AWS::StackName}'
  NodeInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref NodeInstanceRole
  NodeInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - !FindInMap 
                  - ServicePrincipalPartitionMap
                  - !Ref 'AWS::Partition'
                  - EC2
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Sub >-
          arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy'
      Path: /
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}/NodeInstanceRole'
  SG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: >-
        Communication between the control plane and worker nodes in group
        ng-d67b9dea
      SecurityGroupIngress:
        - Description: >-
            [IngressInterCluster] Allow worker nodes in group ng-d67b9dea to
            communicate with control plane (kubelet and workload TCP ports)
          FromPort: 1025
          IpProtocol: tcp
          SourceSecurityGroupId: !ImportValue 'eksctl-exciting-rainbow-1614466223-cluster::SecurityGroup'
          ToPort: 65535
        - Description: >-
            [IngressInterClusterAPI] Allow worker nodes in group ng-d67b9dea to
            communicate with control plane (workloads using HTTPS port, commonly
            used with extension API servers)
          FromPort: 443
          IpProtocol: tcp
          SourceSecurityGroupId: !ImportValue 'eksctl-exciting-rainbow-1614466223-cluster::SecurityGroup'
          ToPort: 443
      Tags:
        - Key: kubernetes.io/cluster/exciting-rainbow-1614466223
          Value: owned
        - Key: Name
          Value: !Sub '${AWS::StackName}/SG'
      VpcId: !ImportValue 'eks-test-1614466223-cluster::VPC'
Outputs:
  FeatureLocalSecurityGroup:
    Value: true
  FeaturePrivateNetworking:
    Value: false
  FeatureSharedSecurityGroup:
    Value: true
  InstanceProfileARN:
    Value: !GetAtt 
      - NodeInstanceProfile
      - Arn
    Export:
      Name: !Sub '${AWS::StackName}::InstanceProfileARN'
  InstanceRoleARN:
    Value: !GetAtt 
      - NodeInstanceRole
      - Arn
    Export:
      Name: !Sub '${AWS::StackName}::InstanceRoleARN'
